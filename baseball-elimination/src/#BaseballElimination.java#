import edu.princeton.cs.algs4.In;
import java.util.Map;

public class BaseballElimination {

    private int[] wins;
    private int[] losses;
    private int[] remaining;
    private int[][] games;
    private Map<String, Integer> teamToId;
    
    // create a baseball division from given filename in format specified below
    public BaseballElimination(String filename) {
	
	In in = new In(filename);
        int teams = in.readInt();
	
        wins = new int[teams];
        losses = new int[teams];
        remaining = new int[teams];
        games = new int[teams][teams];
        teamToId = new HashMap<String, Integer>();

	for (int i = 0; i < teams; i++) {
            String team = in.readString();
            teamToId.put(team, i);
            wins[i] = in.readInt();
            losses[i] = in.readInt();
            remaining[i] = in.readInt();

            for (int j = 0; j < teams; j++) {
                games[i][j] = in.readInt();
            }  
        }
    }

    // number of teams
    public              int numberOfTeams()  {

    }

    // all teams
    public Iterable<String> teams()   {

    }
    // number of wins for given team
    public              int wins(String team)   {

    }
    // number of losses for given team
    public              int losses(String team) {

    }

    // number of remaining games for given team
    public              int remaining(String team)   {

    }
    // number of remaining games between team1 and team2
    public              int against(String team1, String team2)   {

    }

    // is given team eliminated?
    public          boolean isEliminated(String team)             {

    }

    // subset R of teams that eliminates given team; null if not eliminated
    public Iterable<String> certificateOfElimination(String team)  {

    }
}
